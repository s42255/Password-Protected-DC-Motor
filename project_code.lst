
ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 1





       MCS-51 Family Macro Assembler   A S E M - 5 1   V 1.3
       =====================================================



	Source File:	E:\EEE 41\EEE 4706\Project\Prac\MY CODE\Code\Keypad as function\project_code.asm
	Object File:	E:\EEE 41\EEE 4706\Project\Prac\MY CODE\Code\Keypad as function\project_code.hex
	List File:	E:\EEE 41\EEE 4706\Project\Prac\MY CODE\Code\Keypad as function\project_code.lst



 Line  I  Addr  Code            Source

    1:					;DEFINING PINS AND THEIR CORRESPONDING FUNCTIONS FIRST
    2:		B      00A0		RS EQU P2.0 		;RS PIN OF LCD
    3:		B      00A1	 	RW EQU P2.1 		;RW PIN OF LCD
    4:		B      00A2	 	E EQU P2.2  		;ENBL PIN OF LCD
    5:		B      00A3		MOTOR EQU P2.3		;MOTOR DRIVER PIN 1
    6:		B      00A4		REV_MOTOR EQU P2.4  	;MOTOR DRIVER PIN 2
    7:		N      0004		PASSWORD_NO_DIGITS EQU 4 	;NUMBER OF DIGITS IN THE PASSWORD
    8:		N      0034		PIN_RESET_KEY EQU '4'
    9:		N      0035		ON_KEY EQU '5'
   10:		N      0036		OFF_KEY EQU '6'
   11:		N      0034		REV_KEY EQU '4'
   12:
   13:
   14:					;ROWS OF KEYPAD:
   15:		B      00B4		ROW_A EQU P3.4
   16:		B      00B5		ROW_B EQU P3.5
   17:		B      00B6		ROW_C EQU P3.6
   18:		B      00B7		ROW_D EQU P3.7
   19:
   20:					;COLUMNS OF KEYPAD:
   21:		B      00B0		COL_1 EQU P3.0
   22:		B      00B1		COL_2 EQU P3.1
   23:		B      00B2		COL_3 EQU P3.2
   24:		B      00B3		COL_4 EQU P3.3
   25:
   26:		N      0000		ORG 00H		;CODE STARTS FROM HERE ON
   27:	  0000	75 81 70		MOV SP, #70H
   28:	  0003	75 D0 00		MOV PSW, #00H
   29:
   30:					;INITIALIZING INPUT & OUTPUT PORTS
   31:	  0006	75 80 00		MOV P0,#00H
   32:	  0009	75 B0 0F		MOV P3,#0FH
   33:	  000C	75 A0 00		MOV P2,#00H
   34:
   35:	  000F	79 50			MOV R1, #50H 			;POINTER FOR STORING CORRECT PASSWORD
   36:	  0011	7B 04			MOV R3,#PASSWORD_NO_DIGITS 	;LOOP COUNTER FOR COPYING PASSWORD
   37:	  0013	90 05 1F		MOV DPTR,#REAL_PASSWORD		;COPYING STORED REAL PASSWORD ADDRESS LOCATION
   38:
   39:	  0016			COPY_PASSWORD:				;COPYING THE REAL PASSWORD TO RAM LOCATIONS STARTING FROM 50
				H
   40:	  0016	E4			CLR A
   41:	  0017	93			MOVC A,@A+DPTR
   42:	  0018	F7			MOV @R1,A

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 2



 Line  I  Addr  Code            Source

   43:	  0019	09			INC R1
   44:	  001A	A3			INC DPTR
   45:	  001B	DB F9			DJNZ R3,COPY_PASSWORD
   46:
   47:	  001D	90 04 F8	START:	MOV DPTR, #MYLCD	;INITIALIZE AND START THE LCD
   48:	  0020	E4		LCD_IN:	CLR A
   49:	  0021	93			MOVC A,@A+DPTR
   50:	  0022	91 A4			ACALL COMNWRT
   51:	  0024	91 D6			ACALL DELAY
   52:	  0026	60 03			JZ LOAD_WELCOME
   53:	  0028	A3			INC DPTR
   54:	  0029	80 F5			SJMP LCD_IN
   55:
   56:	  002B			LOAD_WELCOME: 			;LOAD THE WELCOME MESSAGE
   57:	  002B	90 05 02		MOV DPTR,#WELCOME
   58:	  002E	91 7F			ACALL TXT_LED
   59:	  0030	12 04 E7		LCALL DELAY_H
   60:
   61:	  0033	7F 00			MOV R7,#0 ;FOR  COUNTING THE NUMBER OF TIMES INCORRECT PASSWORD IS ENTERED
   62:
   63:	  0035			INITIALIZATION:
   64:	  0035	E4			CLR A
   65:	  0036	FB			MOV R3,A ;INITIALLY SET R3 AND R4 AS ZERO
   66:	  0037	FC			MOV R4,A
   67:
   68:	  0038	7D 04			MOV R5, #PASSWORD_NO_DIGITS ;NUMBER OF DIGITS IN THE PASSWORD
   69:	  003A	78 40			MOV R0, #40H ;POINTER 1 FOR CHECKING PASSWORD IS CORRECT OR NOT
   70:	  003C	79 50			MOV R1, #50H ;POINTER 2 FOR CHECKING PASSWORD IS CORRECT OR NOT
   71:
   72:	  003E			CONTINUE:
   73:	  003E	12 04 92		LCALL CLEAR_DISPLAY_FINAL ;CLEAR LCD DISPLAY
   74:
   75:	  0041	90 05 13		MOV DPTR,#PASSWORD ;PROMPT USER FOR ENTERING THE PASSWORD
   76:	  0044	91 7F			ACALL TXT_LED
   77:
   78:	  0046	74 8B		GO_: 	MOV A,#8BH 	;MOVE CURSOR TO CORRECT POSITION
   79:	  0048	91 A4			ACALL	COMNWRT
   80:	  004A	91 D6			ACALL 	DELAY
   81:
   82:	  004C	91 00		KEYPAD:	ACALL KEYBOARD 	;KEYBOARD SUBROUTINE ACTIVATED AND CALLED
   83:
   84:	  004E			PASSWORD_STORE:
   85:	  004E	E4			CLR A
   86:	  004F	93			MOVC A,@A+DPTR
   87:	  0050	F6			MOV @R0,A	;STORE ENTERED PASSWORD IN RAM LOCATIONS
   88:	  0051	74 2A			MOV A,#'*'	;SHOW ENTERED PASSWORD IN WITH '*' SIGN
   89:	  0053	91 B5			ACALL DATAWRT	;CALL DISPLAY SUBROUTINE
   90:	  0055	91 D6			ACALL DELAY
   91:	  0057	08			INC R0		;INCREMENT THE POINTER
   92:	  0058	DD 02			DJNZ R5,NEXT	;UNLESS R5 BECOMES ZERO, TAKE THE NEXT PASSWORD DIGIT INPUT
   93:	  005A	80 02			SJMP DO		;IF ENTIRE PASSWORD ENTERED THEN JUMP TO DO
   94:	  005C	80 EE			NEXT: SJMP KEYPAD
   95:
   96:	  005E	7D 00		DO:	MOV R5,#0 ;COUNT THE NUMBER OF ERROR IN DIGITS
   97:	  0060	7A 04			MOV R2,#PASSWORD_NO_DIGITS ;LOOP COUNTER FOR PASSWORD_CHECK
   98:	  0062	78 40			MOV R0,#40H

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 3



 Line  I  Addr  Code            Source

   99:	  0064	79 50			MOV R1,#50H
  100:
  101:	  0066			REAL_PASSWORD_CHECK: ;CHECKING IF THE ENTERED PASSWORD IS CORRECT OR NOT
  102:	  0066	E6			MOV A,@R0
  103:	  0067	F5 F0			MOV B,A
  104:	  0069	E4			CLR A
  105:	  006A	E7			MOV A,@R1
  106:	  006B	B5 F0 02		CJNE A,B,COUNT
  107:	  006E	80 01			SJMP NOT_COUNT
  108:	  0070	0D		COUNT:	INC R5		;IF THE ENTERED PASSWORD DOESN'T MATCH COUNT THE NUMBER OF DIGITS IN ERROR
  109:	  0071			NOT_COUNT:
  110:	  0071	08			INC R0
  111:	  0072	09			INC R1
  112:	  0073	DA F1			DJNZ R2,REAL_PASSWORD_CHECK
  113:
  114:	  0075	BD 00 02		CJNE R5,#0,NEXT2 ;IF R5 = 0, NO ERROR IN ENTERED PASSWORD
  115:	  0078	80 0C			SJMP GRANT 	; THEN GRANT PERMISSION TO USER FOR CONTROLLING THE MOTOR
  116:
  117:	  007A	BD 01 12	NEXT2:	CJNE R5,#1,DENY ;IF NUMBER OF DIGITS IN ERROR IS 1, WE ARE CLOSE
  118:							;OTHERWISE WE SHOW ACCESS DENIED
  119:
  120:	  007D			VERY_CLOSE:
  121:	  007D	91 8B			ACALL NEW_LINE
  122:	  007F	90 05 43		MOV DPTR,#CLOSE ;SHOWING THAT THEY ARE CLOSE TO THE REAL PASSWORD
  123:	  0082	91 7F			ACALL TXT_LED
  124:	  0084	80 12			SJMP CHECK_ATTEMPTS ;CHECKING IN THE 3RD ATTEMPT IS REACHED OR NOT
  125:
  126:	  0086	91 8B		GRANT:	ACALL NEW_LINE
  127:	  0088	90 05 33		MOV DPTR,#GRANTED ;WE SHOW THAT THE USER HAS BEEN GRANTED THE PERMISSION WHEN PASSWORD IS CO
				RRECT
  128:	  008B	91 7F			ACALL TXT_LED
  129:	  008D	80 4B			SJMP SUCCESS
  130:
  131:	  008F	91 8B		DENY: 	ACALL NEW_LINE
  132:	  0091	90 05 23		MOV DPTR,#DENIED ;WE SHOW THAT THE ACCESS IS DENIED WHEN THE ENTERED PASSWORD IS NOT CORRECT
				 AND NOT CLOSE AS WELL
  133:	  0094	91 7F			ACALL TXT_LED
  134:	  0096	80 00			SJMP CHECK_ATTEMPTS  ;CHECKING IN THE 3RD ATTEMPT IS REACHED OR NOT
  135:
  136:	  0098			CHECK_ATTEMPTS:  ;CHECKING IF MAX NUMBER OF ATTEMPTS IS REACHED OR NOT
  137:	  0098	0F			INC R7   ;INCREMENTING R7, FOR EACH ATTEMPT
  138:	  0099	BF 03 02		CJNE R7,#3,NEXTRY ;IF R7 IS EQUAL TO 3, JUMP TO NEXTRY
  139:	  009C	80 03			SJMP LOCK 	;IF R7=3, LOCK THE SYSTEM
  140:
  141:	  009E			NEXTRY:
  142:	  009E	02 00 35		LJMP INITIALIZATION ;START FROM BEGINNING, ASKING USER TO ENTER PASSWORD IN NEXT ATTEMPT
  143:
  144:	  00A1	12 04 92	LOCK: 	LCALL CLEAR_DISPLAY_FINAL ;DISPLAYING THAT THE SYSTEM IS LOCKED
  145:	  00A4	90 05 52		MOV DPTR,#LOCKED
  146:	  00A7	91 7F			ACALL TXT_LED
  147:
  148:	  00A9	91 8B			ACALL NEW_LINE
  149:	  00AB	90 05 59		MOV DPTR,#RESET_PIN ;SHOWING THE INSTRUCTION TO  RESET THE PIN
  150:	  00AE	91 7F			ACALL TXT_LED
  151:	  00B0	91 00			ACALL KEYBOARD
  152:

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 4



 Line  I  Addr  Code            Source

  153:				;NEW_PASSWORD
  154:
  155:	  00B2			CHECK_IF_4_PRESSED: ;CHECKING IF 4 IS PRESSED, IF NOT THEN SYSTEM REMAINS LOCKED
  156:	  00B2	E4			CLR A
  157:	  00B3	93			MOVC A,@A+DPTR
  158:	  00B4	FC			MOV R4,A
  159:	  00B5	BC 34 E9		CJNE R4,#PIN_RESET_KEY,LOCK ;IF RESET KEY IS NOT PRESSED THEN THE SYTEM WILL REMAIN IN LOCKE
				D STATE
  160:
  161:	  00B8			YES_4_PRESSED:
  162:	  00B8	79 50			MOV R1,#50H ;USE R1 POINTER TO STORE THE NEW PASSWORD
  163:	  00BA	7D 04			MOV R5,#PASSWORD_NO_DIGITS ;LOOP COUNTER FOR NEW PASSWORD ENTER
  164:
  165:	  00BC			PROMPT_NEW_PASSWORD:
  166:	  00BC	12 04 92		LCALL CLEAR_DISPLAY_FINAL
  167:	  00BF	90 05 65		MOV DPTR,#NEW_PASSWORD ;PROMPT NEW PASSWORD FOR THE USER TO ENTER
  168:	  00C2	91 7F			ACALL TXT_LED
  169:
  170:	  00C4	91 00		KEYPAD1:ACALL KEYBOARD ;TAKE INPUT
  171:
  172:	  00C6			STORE_NEW_PASSWORD:
  173:	  00C6	E4			CLR A
  174:	  00C7	93			MOVC A,@A+DPTR
  175:	  00C8	F7			MOV @R1,A
  176:	  00C9	74 2A			MOV A,#'*'
  177:	  00CB	91 B5			ACALL DATAWRT			;CALL DISPLAY SUBROUTINE
  178:	  00CD	91 D6			ACALL DELAY
  179:	  00CF	09			INC R1
  180:	  00D0	DD 02			DJNZ R5,NEXT_     ;UNLESS R5 BECOMES ZERO, TAKE THE NEXT PASSWORD DIGIT INPUT
  181:	  00D2	80 03			SJMP DONE_NEW_PIN_INPUT ;IF ENTIRE PASSWORD ENTERED THEN JUMP TO DONE_NEW_PIN_INPUT
  182:
  183:	  00D4	02 00 C4	NEXT_:	LJMP KEYPAD1	;OTHERWISE CONTINUE TAKING THE PASSWORD INPUT
  184:
  185:	  00D7			DONE_NEW_PIN_INPUT:
  186:	  00D7	02 00 1D		LJMP START   ;ONCE NEW PASSWORD IS ENTERED, WE GO TO THE BEGINNING, ASKING THE USER TO ENTER
				 THE PASSWORD AND ENTER THE SYSTEM
  187:
  188:
  189:	  00DA			SUCCESS:     	;WE REACH HERE IF THE ENTERED PASSWORD BY USER IS CORRECT
  190:	  00DA	12 04 92		LCALL CLEAR_DISPLAY_FINAL
  191:	  00DD	90 05 6E		MOV DPTR,#INSTRUCT_CONTROL ;SHOWING THE CONTROL INSTRUCTIONS FOR THE MOTOR
  192:	  00E0	91 7F			ACALL TXT_LED
  193:
  194:	  00E2	91 8B			ACALL NEW_LINE
  195:	  00E4	90 05 7F		MOV DPTR,#MOTOR_CONTROL ;SHOWING THE NEXT SET OF CONTROL INSTRUCTIONS FOR THE MOTOR
  196:	  00E7	91 7F			ACALL TXT_LED
  197:
  198:	  00E9	91 00		KEYPAD2:ACALL KEYBOARD 	;TAKING INPUT FROM THE USER THTORUHG KEYPAD ALLOWING THEM TO CONTROL THE MOT
				OR
  199:
  200:	  00EB			CHECK_IF_ON_PRESSED: 	;CHECKING IF THE ON BUTTON IS PRESSED OR NOT I.E. '5'
  201:	  00EB	E4			CLR A
  202:	  00EC	93			MOVC A,@A+DPTR
  203:	  00ED	FC			MOV R4,A
  204:	  00EE	BC 35 07		CJNE R4,#ON_KEY,CHECK_IF_OFF_PRESSED ;IF ON KEY NOT PRESSED, THEN GO TO CHECK IF OFF PRESSED
  205:

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 5



 Line  I  Addr  Code            Source

  206:	  00F1			YES_ON_PRESSED:  	;COMES HERE ONLY IF '5' IS PRESSED
  207:	  00F1	C2 A4			CLR REV_MOTOR
  208:	  00F3	D2 A3			SETB MOTOR
  209:	  00F5	02 00 E9		LJMP KEYPAD2	;ALLOWING THE USER TO ENTER THE NEXT CONTROL INPUT THROUGH KEYPAD
  210:
  211:	  00F8			CHECK_IF_OFF_PRESSED: 	;CHECKING IF THE OFF BUTTON IS PRESSED OR NOT I.E. '6'
  212:	  00F8	E4			CLR A
  213:	  00F9	93			MOVC A,@A+DPTR
  214:	  00FA	FC			MOV R4,A
  215:	  00FB	BC 36 07		CJNE R4,#OFF_KEY,CHECK_IF_REV_PRESSED
  216:
  217:	  00FE			YES_OFF_PRESSED:    	;COMES HERE ONLY IF '6' IS PRESSED
  218:	  00FE	C2 A3			CLR MOTOR
  219:	  0100	C2 A4			CLR REV_MOTOR
  220:	  0102	02 00 E9		LJMP KEYPAD2  	;ALLOWING THE USER TO ENTER THE NEXT CONTROL INPUT THROUGH KEYPAD
  221:
  222:	  0105			CHECK_IF_REV_PRESSED:	;CHECKING IF THE REVERSE BUTTON IS PRESSED OR NOT I.E. '4'
  223:	  0105	E4			CLR A
  224:	  0106	93			MOVC A,@A+DPTR
  225:	  0107	FC			MOV R4,A
  226:	  0108	BC 34 07		CJNE R4,#REV_KEY,WRONG_PRESS
  227:
  228:	  010B			YES_REV_PRESSED:	;COMES HERE ONLY IF '4' IS PRESSED
  229:	  010B	B2 A3			CPL MOTOR
  230:	  010D	B2 A4			CPL REV_MOTOR
  231:	  010F	02 00 E9		LJMP KEYPAD2	;ALLOWING THE USER TO ENTER THE NEXT CONTROL INPUT THROUGH KEYPAD
  232:
  233:	  0112			WRONG_PRESS:		;COMES HERE ONLY WRONG KEY IS PRESSED, SO NOTHING HAPPENS TO MOTOR
  234:	  0112	02 00 E9		LJMP KEYPAD2	;ALLOWING THE USER TO ENTER THE CONTROL INPUT THROUGH KEYPAD AGAIN
  235:
  236:	  0115	80 FE		FINISH: SJMP FINISH
  237:
  238:				;SUBROUTINES ARE DEFINED FORM HERE ON
  239:		N      0400		ORG 400H
  240:				;FIRST THE KEBOARD SUBROUTINE
  241:	  0400			KEYBOARD:
  242:
  243:	  0400	C2 B4		K1:	CLR ROW_A   	;FIRST CHECK IF NO KEY IS PRESSED IN THE KEYBOARD
  244:	  0402	C2 B5		        CLR ROW_B
  245:	  0404	C2 B6		        CLR ROW_C
  246:	  0406	C2 B7		        CLR ROW_D
  247:	  0408	E5 B0		        MOV A,P3
  248:	  040A	54 0F		        ANL A,#00001111B
  249:	  040C	B4 0F F1	        CJNE A,#00001111B,K1
  250:
  251:	  040F	91 D6		K2:	ACALL DELAY	;NOW CHECK IF KEY IS PRESSED IN THE KEYBOARD
  252:	  0411	E5 B0			MOV A,P3
  253:	  0413	54 0F			ANL A,#00001111B
  254:	  0415	B4 0F 02		CJNE A,#00001111B,K3
  255:	  0418	80 F5			SJMP K2
  256:
  257:	  041A	91 D6		K3:     ACALL DELAY    ;AGAIN CHECK IF KEY IS PRESSED IN THE KEYBOARD
  258:	  041C	E5 B0			MOV A,P3
  259:	  041E	54 0F			ANL A,#00001111B
  260:	  0420	B4 0F 02		CJNE A,#00001111B,K4
  261:	  0423	80 EA			SJMP K2

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 6



 Line  I  Addr  Code            Source

  262:
  263:	  0425	C2 B4		K4:	CLR  ROW_A	;CHECKING IF KEY IS PRESSED FROM ROW_A
  264:	  0427	D2 B5		       	SETB ROW_B
  265:	  0429	D2 B6		        SETB ROW_C
  266:	  042B	D2 B7		        SETB ROW_D
  267:	  042D	E5 B0		        MOV A,P3
  268:	  042F	54 0F		        ANL A,#00001111B
  269:	  0431	B4 0F 30	        CJNE A,#00001111B,ROW_0
  270:
  271:	  0434	D2 B4		       	SETB ROW_A	;CHECKING IF KEY IS PRESSED FROM ROW_B
  272:	  0436	C2 B5		        CLR  ROW_B
  273:	  0438	D2 B6		        SETB ROW_C
  274:	  043A	D2 B7		        SETB ROW_D
  275:	  043C	E5 B0		       	MOV A,P3
  276:	  043E	54 0F		       	ANL A,#00001111B
  277:	  0440	B4 0F 26	       	CJNE A,#00001111B,ROW_1
  278:
  279:	  0443	D2 B4		        SETB ROW_A	;CHECKING IF KEY IS PRESSED FROM ROW_C
  280:	  0445	D2 B5		        SETB ROW_B
  281:	  0447	C2 B6		        CLR  ROW_C
  282:	  0449	D2 B7		        SETB ROW_D
  283:	  044B	E5 B0		        MOV A,P3
  284:	  044D	54 0F		        ANL A,#00001111B
  285:	  044F	B4 0F 1C	        CJNE A,#00001111B,ROW_2
  286:
  287:	  0452	D2 B4		       	SETB ROW_A	;CHECKING IF KEY IS PRESSED FROM ROW_D
  288:	  0454	D2 B5		        SETB ROW_B
  289:	  0456	D2 B6		        SETB ROW_C
  290:	  0458	C2 B7		        CLR ROW_D
  291:	  045A	E5 B0		        MOV A,P3
  292:	  045C	54 0F			ANL A,#00001111B
  293:	  045E	B4 0F 12		CJNE A,#00001111B,ROW_3
  294:	  0461	02 04 0F		LJMP K2
  295:
  296:	  0464	90 05 90	ROW_0:	MOV DPTR,#KCODE0
  297:	  0467	80 0F			SJMP FIND
  298:	  0469	90 05 94	ROW_1:	MOV DPTR,#KCODE1
  299:	  046C	80 0A			SJMP FIND
  300:	  046E	90 05 98	ROW_2:	MOV DPTR,#KCODE2
  301:	  0471	80 05			SJMP FIND
  302:	  0473	90 05 9C	ROW_3:	MOV DPTR,#KCODE3
  303:	  0476	80 00			SJMP FIND
  304:
  305:	  0478	13		FIND:	RRC	A		;SEE IF CY BIT IS LOW
  306:	  0479	50 03			JNC	RETURN 		;IF ZERO, GET THE ASCII CODE
  307:	  047B	A3			INC	DPTR		;IF CY IS NOT ZERO, POINT TO THE NEXT COLUMN ADDRESS
  308:	  047C	80 FA			SJMP	FIND		;KEEP SEARCHING
  309:	  047E	22		RETURN: RET			;UPON RETURN, THE DPTR HOLDS THE ASCII VALUE OF THE ENTERED KEY
  310:
  311:				;SUBROUTINE TO SHOW TEXT IN LCD
  312:	  047F	E4		TXT_LED:CLR A
  313:	  0480	93			MOVC A,@A+DPTR	;COPYING THE DPTR ITEMS TO ACCUMULATOR ONE BY ONE
  314:	  0481	60 07			JZ FUNC_END	;IF ZERO, JUMP TO END OF FUNCTION
  315:	  0483	91 B5			ACALL DATAWRT
  316:	  0485	91 D6			ACALL DELAY
  317:	  0487	A3			INC DPTR

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 7



 Line  I  Addr  Code            Source

  318:	  0488	80 F5			SJMP TXT_LED
  319:	  048A			FUNC_END:
  320:	  048A	22			RET
  321:
  322:				;SUBROUTINE TO CREATE NEW LINE IN THE LCD
  323:	  048B			NEW_LINE:
  324:	  048B	74 C0			MOV A,#0C0H
  325:	  048D	91 A4			ACALL	COMNWRT
  326:	  048F	91 D6			ACALL 	DELAY
  327:	  0491	22			RET
  328:
  329:				;SUBROUTINE TO CLEAR THE LCD DISPLAY
  330:	  0492			CLEAR_DISPLAY_FINAL:
  331:	  0492	90 04 FE		MOV DPTR, #CLEAR_DISPLAY  ;CLEARING DISPLAY INSTRUCTIONS ARE COPIED TO DPTR
  332:
  333:	  0495	E4		START2:	CLR A
  334:	  0496	93			MOVC A,@A+DPTR
  335:	  0497	91 A4			ACALL COMNWRT
  336:	  0499	91 D6			ACALL DELAY
  337:	  049B	60 06			JZ RETURNTO
  338:	  049D	A3			INC DPTR
  339:	  049E	80 F5			SJMP START2
  340:	  04A0	12 04 D6		LCALL DELAY
  341:	  04A3	22		RETURNTO: RET
  342:
  343:				;COMMAND WRITE SUBROUTINE FOR GIVING COMMAND TO LCD
  344:
  345:	  04A4	12 04 C5	COMNWRT:LCALL	READY		;CHECK IF THE LCD IS READY TO ACCEPT COMMAND
  346:	  04A7	F5 80			MOV	P0, A		;COPY REG A TO PORT 0
  347:	  04A9	C2 A0			CLR	RS		;RS=0 FOR COMMAND REGISTER
  348:	  04AB	C2 A1			CLR	RW		;R/W=0 FOR WRITE
  349:	  04AD	D2 A2			SETB	E		;E=1 OF H-TO-L PULSE
  350:	  04AF	12 04 D6		LCALL	DELAY		;GIVE LCD SOME TIME
  351:	  04B2	C2 A2			CLR	E		;E=0 OF H-TO-L PULSE
  352:	  04B4	22			RET
  353:
  354:				;DATA WRITE SUBROUTINE FOR WRITNG DATA TO LCD
  355:
  356:	  04B5	12 04 C5	DATAWRT:LCALL	READY		;;CHECK IF THE LCD IS READY TO ACCEPT COMMAND
  357:	  04B8	F5 80			MOV	P0, A		;COPY REG A TO PORT0
  358:	  04BA	D2 A0			SETB	RS		;RS=1 FOR DATA REGISTER
  359:	  04BC	C2 A1			CLR	RW		;R/W=0 FOR WRITE
  360:	  04BE	D2 A2			SETB	E		;E=1 OF H-TO-L PULSE
  361:	  04C0	91 D6			ACALL	DELAY		;GIVE LCD SOME TIME
  362:	  04C2	C2 A2			CLR	E		;E=0 OF H-TO-L PULSE
  363:	  04C4	22			RET
  364:
  365:				;READY SUBROUTINE FOR THE LCD
  366:	  04C5	D2 87		READY:	SETB	P0.7		;DEFINING P0.7 AS INPUT PIN FOR NOW
  367:	  04C7	C2 A0			CLR	RS		;RS=0 FOR COMMAND REGISTER
  368:	  04C9	D2 A1			SETB	RW		;R/W=1 FOR READ
  369:	  04CB	C2 A2		WAIT:	CLR	E		;E=0 OF L-TO-H PULSE
  370:	  04CD	12 04 D6		LCALL	DELAY		;GIVE LCD SOME TIME
  371:	  04D0	D2 A2			SETB	E		;E=1 OF L-TO-H PULSE
  372:	  04D2	20 87 F6		JB	P0.7, WAIT	;AS LONG THE P0.7 BIT IS HIGH, WE WILL WAIT
  373:	  04D5	22			RET

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 8



 Line  I  Addr  Code            Source

  374:
  375:				;DELAY SUBROUTINE
  376:	  04D6	C0 03		DELAY:	PUSH 3			;PUSH R3 ONTO STACK
  377:	  04D8	C0 04			PUSH 4			;PUSH R4 ONTO STACK
  378:	  04DA	7B 32			MOV	R3, #50		;DELAY OF APPROXIMATELY 27.83 ms
  379:	  04DC	7C FF		HERE2:	MOV	R4, #255
  380:	  04DE	DC FE		HERE:	DJNZ	R4, HERE	;STAY UNTILL R4 BECOMES 0
  381:	  04E0	DB FA			DJNZ 	R3, HERE2	;LOAD
  382:	  04E2	D0 04			POP 4			;POP R4 FROM THE STACK
  383:	  04E4	D0 03			POP 3			;POP R3 FROM THE STACK
  384:	  04E6	22			RET
  385:
  386:					;HIGHER DELAY
  387:	  04E7	C0 03		DELAY_H:PUSH 3			;PUSH R3 ONTO STACK
  388:	  04E9	C0 04			PUSH 4			;PUSH R4 ONTO STACK
  389:	  04EB	7B FF			MOV	R3, #255	;DELAY OF APPROXIMATELY 142 ms
  390:	  04ED	7C FF		HERE2_:	MOV	R4, #255
  391:	  04EF	DC FE		HERE__:	DJNZ	R4, HERE__	;STAY UNTILL R4 BECOMES 0
  392:	  04F1	DB FA			DJNZ 	R3, HERE2_	;LOAD
  393:	  04F3	D0 04			POP 4			;POP R4 FROM THE STACK
  394:	  04F5	D0 03			POP 3			;POP R3 FROM THE STACK
  395:	  04F7	22			RET
  396:
  397:	  04F8	38 0E 01 06	MYLCD : DB 38H,0EH,01,06,80H,0		;INTIALIZING LCD INSTRUCTIONS STORED HERE
	  04FC	80 00
  398:	  04FE	01 06 80 00	CLEAR_DISPLAY : DB 01,06,80H,0		;CLEARING LCD INSTRUCTIONS STORED HERE
  399:	  0502	20 20 20 20	WELCOME: DB '    WELCOME!    ',0	;SHOWING WELCOME
	  0506	57 45 4C 43
	  050A	4F 4D 45 21
	  050E	20 20 20 20
	  0512	00
  400:	  0513	20 45 4E 54	PASSWORD: DB ' ENTER P/W:',0		;PROMPTING TO ENTER PASSWORD
	  0517	45 52 20 50
	  051B	2F 57 3A 00
  401:
  402:	  051F	35 34 35 34	REAL_PASSWORD: DB '5','4','5','4'	;DEFAULT PASSWORD IS THIS
  403:
  404:	  0523	20 20 41 43	DENIED: DB '  ACCESS DENIED',0		;SHOWING DENIED
	  0527	43 45 53 53
	  052B	20 44 45 4E
	  052F	49 45 44 00
  405:	  0533	20 41 43 43	GRANTED: DB ' ACCESS GRANTED',0		;SHOWING GRANTED PERMIT
	  0537	45 53 53 20
	  053B	47 52 41 4E
	  053F	54 45 44 00
  406:	  0543	20 20 41 4C	CLOSE: DB '  ALMOST RIGHT',0		;SHOWING ALMOST RIGHT MESSAGE
	  0547	4D 4F 53 54
	  054B	20 52 49 47
	  054F	48 54 00
  407:	  0552	4C 4F 43 4B	LOCKED: DB 'LOCKED',0			;SHOWING SYSTEM IS LOCKED
	  0556	45 44 00
  408:	  0559	52 45 53 45	RESET_PIN: DB 'RESET P/W:4',0	;SHOWING RESET PASSWORD OPTION
	  055D	54 20 50 2F
	  0561	57 3A 34 00
  409:	  0565	4E 45 57 20	NEW_PASSWORD: DB 'NEW P/W:',0 		;PROMPTING NEW PASSWORD
	  0569	50 2F 57 3A

ASEM-51 V1.3                                         Copyright (c) 2002 by W.W. Heinz                                         PAGE 9



 Line  I  Addr  Code            Source

	  056D	00
  410:
  411:	  056E	4F 4E 3A 20	INSTRUCT_CONTROL: DB 'ON: 5     OFF: 6',0;SHOWING MOTOR CONTROL OPTIONS
	  0572	35 20 20 20
	  0576	20 20 4F 46
	  057A	46 3A 20 36
	  057E	00
  412:	  057F	20 20 20 52	MOTOR_CONTROL: DB '   REVERSE: 4   ',0	;SHOWING REVERSE MOTOR OPTION
	  0583	45 56 45 52
	  0587	53 45 3A 20
	  058B	34 20 20 20
	  058F	00
  413:
  414:				;ASCII LOOK-UP TABLE FOR EACH ROW
  415:	  0590	31 32 33 41	KCODE0:	DB	'1','2','3','A'				;ROW 0
  416:	  0594	34 35 36 42	KCODE1:	DB	'4','5','6','B'				;ROW 1
  417:	  0598	37 38 39 43	KCODE2:	DB	'7','8','9','C'				;ROW 2
  418:	  059C	2A 30 23 44	KCODE3:	DB	'*','0','#','D'				;ROW 3
  419:
  420:				END





                     register banks used:  ---

                     no errors




ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 10





	       L I S T   O F   S Y M B O L S
	       =============================


SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
??ASEM_51			  NUMBER    8051
??VERSION			  NUMBER    0130
AC				  BIT	      D6
ACC				  DATA	      E0
B				  DATA	      F0
CHECK_ATTEMPTS			  CODE	    0098	 136
CHECK_IF_4_PRESSED		  CODE	    00B2	 155
CHECK_IF_OFF_PRESSED		  CODE	    00F8	 211
CHECK_IF_ON_PRESSED		  CODE	    00EB	 200
CHECK_IF_REV_PRESSED		  CODE	    0105	 222
CLEAR_DISPLAY			  CODE	    04FE	 398
CLEAR_DISPLAY_FINAL		  CODE	    0492	 330
CLOSE				  CODE	    0543	 406
COL_1				  NUMBER    00B0	  21
COL_2				  NUMBER    00B1	  22
COL_3				  NUMBER    00B2	  23
COL_4				  NUMBER    00B3	  24
COMNWRT				  CODE	    04A4	 345
CONTINUE			  CODE	    003E	  72
COPY_PASSWORD			  CODE	    0016	  39
COUNT				  CODE	    0070	 108
CY				  BIT	      D7
DATAWRT				  CODE	    04B5	 356
DELAY				  CODE	    04D6	 376
DELAY_H				  CODE	    04E7	 387
DENIED				  CODE	    0523	 404
DENY				  CODE	    008F	 131
DO				  CODE	    005E	  96
DONE_NEW_PIN_INPUT		  CODE	    00D7	 185
DPH				  DATA	      83
DPL				  DATA	      82
E				  NUMBER    00A2	   4
EA				  BIT	      AF
ES				  BIT	      AC
ET0				  BIT	      A9
ET1				  BIT	      AB
EX0				  BIT	      A8
EX1				  BIT	      AA
EXTI0				  CODE	    0003
EXTI1				  CODE	    0013
F0				  BIT	      D5
FIND				  CODE	    0478	 305
FINISH				  CODE	    0115	 236
FUNC_END			  CODE	    048A	 319
GO_				  CODE	    0046	  78
GRANT				  CODE	    0086	 126
GRANTED				  CODE	    0533	 405
HERE				  CODE	    04DE	 380
HERE2				  CODE	    04DC	 379
HERE2_				  CODE	    04ED	 390

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 11



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
HERE__				  CODE	    04EF	 391
IE				  DATA	      A8
IE0				  BIT	      89
IE1				  BIT	      8B
INITIALIZATION			  CODE	    0035	  63
INSTRUCT_CONTROL		  CODE	    056E	 411
INT0				  BIT	      B2
INT1				  BIT	      B3
IP				  DATA	      B8
IT0				  BIT	      88
IT1				  BIT	      8A
K1				  CODE	    0400	 243
K2				  CODE	    040F	 251
K3				  CODE	    041A	 257
K4				  CODE	    0425	 263
KCODE0				  CODE	    0590	 415
KCODE1				  CODE	    0594	 416
KCODE2				  CODE	    0598	 417
KCODE3				  CODE	    059C	 418
KEYBOARD			  CODE	    0400	 241
KEYPAD				  CODE	    004C	  82
KEYPAD1				  CODE	    00C4	 170
KEYPAD2				  CODE	    00E9	 198
LCD_IN				  CODE	    0020	  48
LOAD_WELCOME			  CODE	    002B	  56
LOCK				  CODE	    00A1	 144
LOCKED				  CODE	    0552	 407
MOTOR				  NUMBER    00A3	   5
MOTOR_CONTROL			  CODE	    057F	 412
MYLCD				  CODE	    04F8	 397
NEW_LINE			  CODE	    048B	 323
NEW_PASSWORD			  CODE	    0565	 409
NEXT				  CODE	    005C	  94
NEXT2				  CODE	    007A	 117
NEXTRY				  CODE	    009E	 141
NEXT_				  CODE	    00D4	 183
NOT_COUNT			  CODE	    0071	 109
OFF_KEY				  NUMBER    0036	  10
ON_KEY				  NUMBER    0035	   9
OV				  BIT	      D2
P				  BIT	      D0
P0				  DATA	      80
P1				  DATA	      90
P2				  DATA	      A0
P3				  DATA	      B0
PASSWORD			  CODE	    0513	 400
PASSWORD_NO_DIGITS		  NUMBER    0004	   7
PASSWORD_STORE			  CODE	    004E	  84
PCON				  DATA	      87
PIN_RESET_KEY			  NUMBER    0034	   8
PROMPT_NEW_PASSWORD		  CODE	    00BC	 165
PS				  BIT	      BC
PSW				  DATA	      D0
PT0				  BIT	      B9
PT1				  BIT	      BB
PX0				  BIT	      B8

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 12



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
PX1				  BIT	      BA
RB8				  BIT	      9A
RD				  BIT	      B7
READY				  CODE	    04C5	 366
REAL_PASSWORD			  CODE	    051F	 402
REAL_PASSWORD_CHECK		  CODE	    0066	 101
REN				  BIT	      9C
RESET				  CODE	    0000
RESET_PIN			  CODE	    0559	 408
RETURN				  CODE	    047E	 309
RETURNTO			  CODE	    04A3	 341
REV_KEY				  NUMBER    0034	  11
REV_MOTOR			  NUMBER    00A4	   6
RI				  BIT	      98
ROW_0				  CODE	    0464	 296
ROW_1				  CODE	    0469	 298
ROW_2				  CODE	    046E	 300
ROW_3				  CODE	    0473	 302
ROW_A				  NUMBER    00B4	  15
ROW_B				  NUMBER    00B5	  16
ROW_C				  NUMBER    00B6	  17
ROW_D				  NUMBER    00B7	  18
RS				  NUMBER    00A0	   2
RS0				  BIT	      D3
RS1				  BIT	      D4
RW				  NUMBER    00A1	   3
RXD				  BIT	      B0
SBUF				  DATA	      99
SCON				  DATA	      98
SINT				  CODE	    0023
SM0				  BIT	      9F
SM1				  BIT	      9E
SM2				  BIT	      9D
SP				  DATA	      81
START				  CODE	    001D	  47
START2				  CODE	    0495	 333
STORE_NEW_PASSWORD		  CODE	    00C6	 172
SUCCESS				  CODE	    00DA	 189
T0				  BIT	      B4
T1				  BIT	      B5
TB8				  BIT	      9B
TCON				  DATA	      88
TF0				  BIT	      8D
TF1				  BIT	      8F
TH0				  DATA	      8C
TH1				  DATA	      8D
TI				  BIT	      99
TIMER0				  CODE	    000B
TIMER1				  CODE	    001B
TL0				  DATA	      8A
TL1				  DATA	      8B
TMOD				  DATA	      89
TR0				  BIT	      8C
TR1				  BIT	      8E
TXD				  BIT	      B1
TXT_LED				  CODE	    047F	 312

ASEM-51 V1.3                                        Copyright (c) 2002 by W.W. Heinz                                         PAGE 13



SYMBOL				  TYPE     VALUE	LINE
------------------------------------------------------------
VERY_CLOSE			  CODE	    007D	 120
WAIT				  CODE	    04CB	 369
WELCOME				  CODE	    0502	 399
WR				  BIT	      B6
WRONG_PRESS			  CODE	    0112	 233
YES_4_PRESSED			  CODE	    00B8	 161
YES_OFF_PRESSED			  CODE	    00FE	 217
YES_ON_PRESSED			  CODE	    00F1	 206
YES_REV_PRESSED			  CODE	    010B	 228
